---
import { $page } from "@store/store";
import { projects } from "@data/projects";

import Container from "@components/Container.astro";
import Screens from "@components/Screens.astro";
import Screen from "@components/Screen.astro";
import Texts from "@components/Text.astro";
import Page from "@components/Page.astro";

interface Project {
    title: string;
    desc: string;
    width: number;
    path: string;
    screens: string[];
    technologies: string[];
    roles: string[];
    url: string;
    dark?: boolean;
}
---

<div data-projects-modal class="modal">
    <button data-close-modal class="modal__btn"> &#x2715;</button>
    <div class="loader"></div>

    <Page />
    <div class="projects">
        {
            projects.map((project: Project) => (
                <div class="projects__content">
                    <Container>
                        <Screens slot="images" index="1">
                            {project.screens.map((screen) => (
                                <Screen
                                    path={screen}
                                    name={project.title}
                                    customClass={project.dark ? "dark" : ""}
                                />
                            ))}
                        </Screens>
                        <Texts
                            slot="texts"
                            path={project.path}
                            alt={project.title}
                            link={`/projects/${project.title}`}
                            desc={project.desc}
                            title={project.title}
                            width={project.width}
                            technologies={project.technologies}
                            roles={project.roles}
                            url={project.url}
                        />
                    </Container>
                </div>
            ))
        }
    </div>
</div>

<style>
    .modal {
        background-color: var(--secondary-color);
    }
    .loader {
        width: 100%;
        height: 100%;
        position: absolute;
        right: 0;
        top: 0;
        z-index: 10;
        -webkit-transform: translateX(100%);
        -ms-transform: translateX(100%);
        transform: translateX(100%);
        -webkit-transition: -webkit-transform 0.4s
            cubic-bezier(0.76, 0, 0.24, 1);
        transition: -webkit-transform 0.4s cubic-bezier(0.76, 0, 0.24, 1);
        -o-transition: transform 0.4s cubic-bezier(0.76, 0, 0.24, 1);
        transition: transform 0.4s cubic-bezier(0.76, 0, 0.24, 1);
        transition:
            transform 0.4s cubic-bezier(0.76, 0, 0.24, 1),
            -webkit-transform 0.4s cubic-bezier(0.76, 0, 0.24, 1);
        will-change: transform;
        background-color: #07355f;
    }
    .projects {
        height: 100%;
        -webkit-box-flex: 1;
        -ms-flex: 1;
        flex: 1;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        justify-content: start;
        gap: 7rem;
        overflow-y: auto;
        overflow-x: hidden;
        padding: 4rem 0;
        position: relative;
        /* content-visibility: hidden; */
    }
    .projects__content {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }
    @media screen and (max-width: 900px) {
        .projects {
            gap: 9rem;
        }
        .modal {
            top: 4%;
        }
        .modal:after {
            background: -o-radial-gradient(
                    75% -20%,
                    circle,
                    rgba(0, 0, 0, 0),
                    #000
                ),
                url("../../assets/images/noise.svg");
            background: radial-gradient(
                    circle at 75% -20%,
                    rgba(0, 0, 0, 0),
                    #000
                ),
                url("../../assets/images/noise.svg");
        }
    }
</style>

<script>
    const loader = document.querySelector(".loader");
    const back = document.querySelectorAll(".back");
    const links = document.querySelectorAll(".text_link");
    const details = document.getElementById("details");

    back.forEach((btn) => {
        btn.addEventListener("click", (e) => {
            const target = e.target as HTMLElement;
            const parent = target.parentElement;

            if (!parent) return;

            if (loader) {
                (loader as HTMLElement).style.transform = "translateX(0)";
            }

            if (parent.classList.contains("details")) {
                parent.classList.remove("details");
            }

            setTimeout(() => {
                if (loader) {
                    (loader as HTMLElement).style.transform =
                        "translateX(100%)";
                }
            }, 900);
        });
    });

    links.forEach((btn) => {
        const title = btn.getAttribute("data-title");

        btn.addEventListener("click", (e) => {
            if (loader) {
                (loader as HTMLElement).style.transform = "translateX(0)";
            }

            if (details && title) {
                details.classList.add("details");
                details.dataset.hash = title;
            }
            setTimeout(() => {
                if (loader) {
                    (loader as HTMLElement).style.transform =
                        "translateX(-100%)";
                }
            }, 1000);
        });
    });
</script>
